{"ast":null,"code":"var _jsxFileName = \"D:\\\\RaDaR\\\\React\\\\full-shop\\\\client\\\\src\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport { fetchOneProduct, updateProduct, fetchCategories, fetchBrands, fetchMechanisms, fetchGenders } from '../http/catalogAPI.js';\nimport { useState, useEffect } from 'react';\nimport uuid from 'react-uuid';\nimport UpdateProperties from './UpdateProperties.js';\nimport { createProperty, updateProperty, deleteProperty } from '../http/catalogAPI.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValue = {\n  name: '',\n  price: '',\n  category: '',\n  brand: '',\n  mechanism: '',\n  gender: ''\n};\nconst defaultValid = {\n  name: null,\n  price: null,\n  category: null,\n  brand: null,\n  mechanism: null,\n  gender: null\n};\n\nconst isValid = value => {\n  const result = {};\n  const pattern = /^[1-9][0-9]*$/;\n\n  for (let key in value) {\n    if (key === 'name') result.name = value.name.trim() !== '';\n    if (key === 'price') result.price = pattern.test(value.price.trim());\n    if (key === 'category') result.category = pattern.test(value.category);\n    if (key === 'brand') result.brand = pattern.test(value.brand);\n    if (key === 'mechanism') result.mechanism = pattern.test(value.mechanism);\n    if (key === 'gender') result.gender = pattern.test(value.gender);\n  }\n\n  return result;\n};\n\nconst updateProperties = async (properties, productId) => {\n  for (const prop of properties) {\n    const empty = prop.name.trim() === '' || prop.value.trim() === '';\n\n    if (empty && prop.id) {\n      try {\n        await deleteProperty(productId, prop);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n\n    if (prop.append && !empty) {\n      try {\n        await createProperty(productId, prop);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n\n    if (prop.change && !prop.remove) {\n      try {\n        await updateProperty(productId, prop.id, prop);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n\n    if (prop.remove) {\n      try {\n        await deleteProperty(productId, prop.id);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n  }\n};\n\nconst UpdateProduct = props => {\n  _s();\n\n  const {\n    id,\n    show,\n    setShow,\n    setChange\n  } = props;\n  const [value, setValue] = useState(defaultValue);\n  const [valid, setValid] = useState(defaultValid);\n  const [categories, setCategories] = useState(null);\n  const [brands, setBrands] = useState(null);\n  const [mechanisms, setMechanisms] = useState(null);\n  const [genders, setGenders] = useState(null);\n  const [image, setImage] = useState(null);\n  const [properties, setProperties] = useState([]);\n  useEffect(() => {\n    if (id) {\n      fetchOneProduct(id).then(data => {\n        const prod = {\n          name: data.name,\n          price: data.price.toString(),\n          category: data.categoryId.toString(),\n          brand: data.brandId.toString(),\n          mechanism: data.mechanismId.toString(),\n          gender: data.genderId.toString()\n        };\n        setValue(prod);\n        setValid(isValid(prod));\n        setProperties(data.props.map(item => {\n          return { ...item,\n            unique: uuid(),\n            append: false,\n            remove: false,\n            change: false\n          };\n        }));\n      }).catch(error => alert(error.response.data.message));\n      fetchCategories().then(data => setCategories(data));\n      fetchBrands().then(data => setBrands(data));\n      fetchMechanisms().then(data => setMechanisms(data));\n      fetchGenders().then(data => setGenders(data));\n    }\n  }, [id]);\n\n  const handleInputChange = event => {\n    const data = { ...value,\n      [event.target.name]: event.target.value\n    };\n    setValue(data);\n    setValid(isValid(data));\n  };\n\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const correct = isValid(value);\n    setValid(correct);\n\n    if (correct.name && correct.price && correct.category && correct.brand && correct.mechanism && correct.gender) {\n      const data = new FormData();\n      data.append('name', value.name.trim());\n      data.append('price', value.price.trim());\n      data.append('categoryId', value.category);\n      data.append('brandId', value.brand);\n      data.append('mechanismId', value.mechanism);\n      data.append('genderId', value.gender);\n      if (image) data.append('image', image, image.name);\n\n      if (properties.length) {\n        await updateProperties(properties, id);\n      }\n\n      updateProduct(id, data).then(data => {\n        event.target.image.value = '';\n        const prod = {\n          name: data.name,\n          price: data.price.toString(),\n          category: data.categoryId.toString(),\n          brand: data.brandId.toString(),\n          mechanism: data.mechanismId.toString(),\n          gender: data.genderId.toString()\n        };\n        setValue(prod);\n        setValid(isValid(prod));\n        setProperties(data.props.map(item => {\n          return { ...item,\n            unique: uuid(),\n            append: false,\n            remove: false,\n            change: false\n          };\n        }));\n        setShow(false);\n        setChange(state => !state);\n      }).catch(error => alert(error.response.data.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"name\",\n          value: value.name,\n          onChange: e => handleInputChange(e),\n          isValid: valid.name === true,\n          isInvalid: valid.name === false,\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430...\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"category\",\n              value: value.category,\n              onChange: e => handleInputChange(e),\n              isValid: valid.category === true,\n              isInvalid: valid.category === false,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), categories && categories.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"brand\",\n              value: value.brand,\n              onChange: e => handleInputChange(e),\n              isValid: valid.brand === true,\n              isInvalid: valid.brand === false,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0411\\u0440\\u0435\\u043D\\u0434\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this), brands && brands.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"mechanism\",\n              value: value.mechanism,\n              onChange: e => handleInputChange(e),\n              isValid: valid.mechanism === true,\n              isInvalid: valid.mechanism === false,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0422\\u0438\\u043F \\u043C\\u0435\\u0445\\u0430\\u043D\\u0438\\u0437\\u043C\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this), mechanisms && mechanisms.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"gender\",\n              value: value.gender,\n              onChange: e => handleInputChange(e),\n              isValid: valid.gender === true,\n              isInvalid: valid.gender === false,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0411\\u0440\\u0435\\u043D\\u0434\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), genders && genders.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"price\",\n              value: value.price,\n              onChange: e => handleInputChange(e),\n              isValid: valid.price === true,\n              isInvalid: valid.price === false,\n              placeholder: \"\\u0426\\u0435\\u043D\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"image\",\n              type: \"file\",\n              onChange: e => handleImageChange(e),\n              placeholder: \"\\u0424\\u043E\\u0442\\u043E \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UpdateProperties, {\n          properties: properties,\n          setProperties: setProperties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"iuflBsqhV+ykPetltY1B6dSOP5E=\");\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["D:/RaDaR/React/full-shop/client/src/components/UpdateProduct.js"],"names":["Modal","Button","Form","Row","Col","fetchOneProduct","updateProduct","fetchCategories","fetchBrands","fetchMechanisms","fetchGenders","useState","useEffect","uuid","UpdateProperties","createProperty","updateProperty","deleteProperty","defaultValue","name","price","category","brand","mechanism","gender","defaultValid","isValid","value","result","pattern","key","trim","test","updateProperties","properties","productId","prop","empty","id","error","alert","response","data","message","append","change","remove","UpdateProduct","props","show","setShow","setChange","setValue","valid","setValid","categories","setCategories","brands","setBrands","mechanisms","setMechanisms","genders","setGenders","image","setImage","setProperties","then","prod","toString","categoryId","brandId","mechanismId","genderId","map","item","unique","catch","handleInputChange","event","target","handleImageChange","files","handleSubmit","preventDefault","correct","FormData","length","state","e"],"mappings":"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","sourcesContent":["import { Modal, Button, Form, Row, Col } from 'react-bootstrap'\r\nimport { fetchOneProduct, updateProduct, fetchCategories, fetchBrands, fetchMechanisms, fetchGenders } from '../http/catalogAPI.js'\r\nimport { useState, useEffect } from 'react'\r\nimport uuid from 'react-uuid'\r\nimport UpdateProperties from './UpdateProperties.js'\r\nimport { createProperty, updateProperty, deleteProperty } from '../http/catalogAPI.js'\r\n\r\nconst defaultValue = {name: '', price: '', category: '', brand: '',  mechanism: '', gender: ''}\r\nconst defaultValid = {name: null, price: null, category: null, brand: null,  mechanism: null, gender: null}\r\n\r\nconst isValid = (value) => {\r\n    const result = {}\r\n    const pattern = /^[1-9][0-9]*$/\r\n    for (let key in value) {\r\n        if (key === 'name') result.name = value.name.trim() !== ''\r\n        if (key === 'price') result.price = pattern.test(value.price.trim())\r\n        if (key === 'category') result.category = pattern.test(value.category)\r\n        if (key === 'brand') result.brand = pattern.test(value.brand)\r\n        if (key === 'mechanism') result.mechanism = pattern.test(value.mechanism)\r\n        if (key === 'gender') result.gender = pattern.test(value.gender)\r\n    }\r\n    return result\r\n}\r\n\r\nconst updateProperties = async (properties, productId) => {\r\n    for (const prop of properties) {\r\n        const empty = prop.name.trim() === '' || prop.value.trim() === ''\r\n        if (empty && prop.id) {\r\n            try {\r\n                await deleteProperty(productId, prop)\r\n            } catch(error) {\r\n                alert(error.response.data.message)\r\n            }\r\n            continue\r\n        }\r\n\r\n        if (prop.append && !empty) {\r\n            try {\r\n                await createProperty(productId, prop)\r\n            } catch(error) {\r\n                alert(error.response.data.message)\r\n            }\r\n            continue\r\n        }\r\n        if (prop.change && !prop.remove) {\r\n            try {\r\n                await updateProperty(productId, prop.id, prop)\r\n            } catch(error) {\r\n                alert(error.response.data.message)\r\n            }\r\n            continue\r\n        }\r\n        if (prop.remove) {\r\n            try {\r\n                await deleteProperty(productId, prop.id)\r\n            } catch(error) {\r\n                alert(error.response.data.message)\r\n            }\r\n            continue\r\n        }\r\n    }\r\n}\r\n\r\nconst UpdateProduct = (props) => {\r\n    const { id, show, setShow, setChange } = props\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n    const [valid, setValid] = useState(defaultValid)\r\n    const [categories, setCategories] = useState(null)\r\n    const [brands, setBrands] = useState(null)\r\n    const [mechanisms, setMechanisms] = useState(null)\r\n    const [genders, setGenders] = useState(null)\r\n    const [image, setImage] = useState(null)\r\n    const [properties, setProperties] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(id) {\r\n            fetchOneProduct(id)\r\n                .then(\r\n                    data => {\r\n                        const prod = {\r\n                            name: data.name,\r\n                            price: data.price.toString(),\r\n                            category: data.categoryId.toString(),\r\n                            brand: data.brandId.toString(),\r\n                            mechanism: data.mechanismId.toString(),\r\n                            gender: data.genderId.toString()\r\n                        }\r\n                        setValue(prod)\r\n                        setValid(isValid(prod))\r\n                        setProperties(data.props.map(item => {\r\n                            return {...item, unique: uuid(), append: false, remove: false, change: false}\r\n                        }))\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => alert(error.response.data.message)\r\n                )\r\n            fetchCategories()\r\n                .then(\r\n                    data => setCategories(data)\r\n                )\r\n            fetchBrands()\r\n                .then(\r\n                    data => setBrands(data)\r\n                )\r\n            fetchMechanisms()\r\n                .then(\r\n                    data => setMechanisms(data)\r\n                )\r\n            fetchGenders()\r\n                .then(\r\n                    data => setGenders(data)\r\n                )\r\n        }\r\n    }, [id])\r\n\r\n    const handleInputChange = (event) => {\r\n        const data = {...value, [event.target.name]: event.target.value}\r\n        setValue(data)\r\n        setValid(isValid(data))\r\n    }\r\n\r\n    const handleImageChange = (event) => {\r\n        setImage(event.target.files[0])\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const correct = isValid(value)\r\n        setValid(correct)\r\n\r\n        if (correct.name && correct.price && correct.category && correct.brand && correct.mechanism && correct.gender) {\r\n            const data = new FormData()\r\n            data.append('name', value.name.trim())\r\n            data.append('price', value.price.trim())\r\n            data.append('categoryId', value.category)\r\n            data.append('brandId', value.brand)\r\n            data.append('mechanismId', value.mechanism)\r\n            data.append('genderId', value.gender)\r\n            if (image) data.append('image', image, image.name)\r\n\r\n            if (properties.length) {\r\n                await updateProperties(properties, id)\r\n            }\r\n\r\n            updateProduct(id, data)\r\n                .then(\r\n                    data => {\r\n                        event.target.image.value = ''\r\n                        const prod = {\r\n                            name: data.name,\r\n                            price: data.price.toString(),\r\n                            category: data.categoryId.toString(),\r\n                            brand: data.brandId.toString(),\r\n                            mechanism: data.mechanismId.toString(),\r\n                            gender: data.genderId.toString()\r\n                        }\r\n                        setValue(prod)\r\n                        setValid(isValid(prod))\r\n                        setProperties(data.props.map(item => {\r\n                            return {...item, unique: uuid(), append: false, remove: false, change: false}\r\n                        }))\r\n                        setShow(false)\r\n                        setChange(state => !state)\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => alert(error.response.data.message)\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={() => setShow(false)} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Редактирование товара</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                    <Form.Control\r\n                        name=\"name\"\r\n                        value={value.name}\r\n                        onChange={e => handleInputChange(e)}\r\n                        isValid={valid.name === true}\r\n                        isInvalid={valid.name === false}\r\n                        placeholder=\"Название товара...\"\r\n                        className=\"mb-3\"\r\n                    />\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <Form.Select\r\n                                name=\"category\"\r\n                                value={value.category}\r\n                                onChange={e => handleInputChange(e)}\r\n                                isValid={valid.category === true}\r\n                                isInvalid={valid.category === false}\r\n                            >\r\n                                <option value=\"\">Категория</option>\r\n                                {categories && categories.map(item =>\r\n                                    <option key={item.id} value={item.id}>{item.name}</option>\r\n                                )}\r\n                            </Form.Select>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Select\r\n                                name=\"brand\"\r\n                                value={value.brand}\r\n                                onChange={e => handleInputChange(e)}\r\n                                isValid={valid.brand === true}\r\n                                isInvalid={valid.brand === false}\r\n                            >\r\n                                <option value=\"\">Бренд</option>\r\n                                {brands && brands.map(item =>\r\n                                    <option key={item.id} value={item.id}>{item.name}</option>\r\n                                )}\r\n                            </Form.Select>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Select\r\n                                name=\"mechanism\"\r\n                                value={value.mechanism}\r\n                                onChange={e => handleInputChange(e)}\r\n                                isValid={valid.mechanism === true}\r\n                                isInvalid={valid.mechanism === false}\r\n                            >\r\n                                <option value=\"\">Тип механизма</option>\r\n                                {mechanisms && mechanisms.map(item =>\r\n                                    <option key={item.id} value={item.id}>{item.name}</option>\r\n                                )}\r\n                            </Form.Select>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Select\r\n                                name=\"gender\"\r\n                                value={value.gender}\r\n                                onChange={e => handleInputChange(e)}\r\n                                isValid={valid.gender === true}\r\n                                isInvalid={valid.gender === false}\r\n                            >\r\n                                <option value=\"\">Бренд</option>\r\n                                {genders && genders.map(item =>\r\n                                    <option key={item.id} value={item.id}>{item.name}</option>\r\n                                )}\r\n                            </Form.Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <Form.Control\r\n                                name=\"price\"\r\n                                value={value.price}\r\n                                onChange={e => handleInputChange(e)}\r\n                                isValid={valid.price === true}\r\n                                isInvalid={valid.price === false}\r\n                                placeholder=\"Цена товара...\"\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control\r\n                                name=\"image\"\r\n                                type=\"file\"\r\n                                onChange={e => handleImageChange(e)}\r\n                                placeholder=\"Фото товара...\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <UpdateProperties properties={properties} setProperties={setProperties} />\r\n                    <Row>\r\n                        <Col>\r\n                            <Button type=\"submit\">Сохранить</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct"]},"metadata":{},"sourceType":"module"}